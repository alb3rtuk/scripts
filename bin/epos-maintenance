#!/usr/bin/env ruby

require File.expand_path('~/Repos/shared/ruby-core/terminal.rb')

FORCE = '-F'

@errors = []
@args = ARGV

def write(text)
    App::Terminal::output(text, App::Terminal::MSG_CUSTOM, '  POS-Bot  ', 238)
end

def update(repo, mvn = false, gradle = false)

    uncommited_files = false

    # Check for un-accounted for stashes.
    result = App::Terminal::command_capture('git stash list', repo)
    @errors << "There are un-dropped stashes on: #{App::Terminal::format_directory(repo)}" if result[0] =~ /stash@\{[0-9]+\}/

    # Check if there is something to do?
    result = App::Terminal::command_capture('git status', repo, true, false)
    result[0].split("\n").each do |line|
        uncommited_files = true if line =~ /Changes to be committed:/ || line =~ /Changes not staged for commit:/ || line =~ /Untracked files:/
    end

    # Stash un-commited files.
    if uncommited_files
        result = App::Terminal::command_capture('git stash', repo, true, false)
        unless result[0] == "No local changes to save\n"
            # Abort if error
            App::Terminal::error('Something went wrong!', ["Unable to stash contents in: #{App::Terminal::format_directory(repo)}", 'Aborting script!'].push(*result), true) unless result[0] =~ /Saved working directory and index state WIP on \S+:\s[A-Za-z0-9]{7} .+/
        end
    end

    # Do a git pull.
    result = App::Terminal::command_capture('git pull', repo)

    # If changes come in, do a build.
    unless result[0] =~ /Already up-to-date./ && !@args.include?(FORCE)

        # Maven Build
        App::Terminal::command('mvn clean install', repo) if mvn

        # Gradle Build
        App::Terminal::command('gradle', repo) if gradle

    end

    # Un-stash un-commited files.
    if uncommited_files
        result = App::Terminal::command_capture('git stash pop', repo, true, false)
        # Abort if error.
        App::Terminal::error('Something went wrong!', ["Unable to apply stash in: #{App::Terminal::format_directory(repo)}", 'Aborting Script'].push(*result), true) if result[0] =~ /error: Your local changes to the following files would be overwritten by merge:/
    end

end

repos = [
    ['~/Repos/brightpearl/epos/bp-java-sdk', true, false],
    ['~/Repos/brightpearl/epos/bp-mq-client', true, false],
    ['~/Repos/brightpearl/epos/bp-rest-error', true, false],
    ['~/Repos/brightpearl/epos/bp-rest-error-spring', true, false],
    ['~/Repos/brightpearl/epos/bp-rest-handling', true, false],
    ['~/Repos/brightpearl/epos/bp-rest-handling-spring', true, false],
    ['~/Repos/brightpearl/epos/bp-service-client', true, false],
    ['~/Repos/brightpearl/epos/ios-epos', false, false],
    ['~/Repos/brightpearl/epos/locator-client', true, false],
    ['~/Repos/brightpearl/epos/locator-registrar', true, false],
    ['~/Repos/brightpearl/epos/parent-pom-minimal', true, false],
    ['~/Repos/brightpearl/epos/posintegrationservice', true, false],
    ['~/Repos/brightpearl/epos/posmanagementapi', false, true],
    ['~/Repos/brightpearl/epos/posmanagementservice', true, false],
    ['~/Repos/brightpearl/epos/spring-boot-parent', true, false]
]

repos.each { |repo_data| update(repo_data[0], repo_data[1], repo_data[2]) }

App::Terminal::warning('The following should be looked at:', @errors) if @errors.any?
